buildscript {
    project.ext {
        build = [
                versionCode: 1,
                versionName: "0.1.0"
        ]

        versions = [
                // sdk
                compileSdk         : 23,
                targetSdk          : 23,
                minSdk             : 16,

                // libs
                buildTools         : "23.0.3",
                supportV7          : "23.2.1",
                rxandroid          : "1.1.0",
                rxjava             : "1.1.3",
                jackson            : "2.7.3",

                // test
                junit              : "4.12",
                supportAnnotations : "23.2.1",
                supportTest        : "0.5",
                espresso           : "2.2.2"
        ]
    }
}

apply plugin: "com.android.application"
apply plugin: "com.github.ben-manes.versions"
apply plugin: "com.github.kt3k.coveralls"

android {
    compileSdkVersion project.ext.versions.compileSdk
    buildToolsVersion project.ext.versions.buildTools

    defaultConfig {
        applicationId "net.bradbowie.alain"
        versionCode project.ext.build.versionCode
        versionName project.ext.build.versionName

        minSdkVersion project.ext.versions.minSdk
        targetSdkVersion project.ext.versions.targetSdk

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        // TODO: 
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled true
    }
}

dependencies {
    compile group: "com.android.support", name: "appcompat-v7", version: project.ext.versions.supportV7
    compile group: "com.android.support", name: "design", version: project.ext.versions.supportV7
    compile group: "com.android.support", name: "cardview-v7", version: project.ext.versions.supportV7
    compile group: "io.reactivex", name: "rxjava", version: project.ext.versions.rxjava
    compile group: "io.reactivex", name: "rxandroid", version: project.ext.versions.rxandroid
    compile group: "com.fasterxml.jackson.core", name: "jackson-core", version: project.ext.versions.jackson
    compile group: "com.fasterxml.jackson.core", name: "jackson-annotations", version: project.ext.versions.jackson
    compile group: "com.fasterxml.jackson.core", name: "jackson-databind", version: project.ext.versions.jackson

    // test
    testCompile group: "junit", name: "junit", version: project.ext.versions.junit

    // androidTest
    androidTestCompile group: "com.android.support", name: "support-annotations", version: project.ext.versions.supportAnnotations
    androidTestCompile group: "com.android.support.test", name: "runner", version: project.ext.versions.supportTest
    androidTestCompile group: "com.android.support.test", name: "rules", version: project.ext.versions.supportTest
    androidTestCompile group: "com.android.support.test.espresso", name: "espresso-core", version: project.ext.versions.espresso
    androidTestCompile group: "com.android.support.test.espresso", name: "espresso-intents", version: project.ext.versions.espresso
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/coverage/debug/report.xml"
}

/*
 * Workaround for https://code.google.com/p/android/issues/detail?id=182715
 *
 * The Android Gradle plugin is creating DataBindingExportBuildInfoTasks for the instrumentation
 * APK that generates from the app APKs layouts. This creates duplicate classes in the app and
 * instrumentation APK which leads to
 *      java.lang.IllegalAccessError: Class ref in pre-verified class resolved to unexpected implementation
 * on older devices.
 *
 * The workaround is to get the DataBindingExportBuildInfoTasks tasks for the instrumentation APK
 * and delete the files right after it creates them.
 */
tasks.withType(com.android.build.gradle.internal.tasks.databinding.DataBindingExportBuildInfoTask) { task ->
    if (task.name.endsWith("AndroidTest")) {
        task.finalizedBy(tasks.create("${task.name}Workaround") << {
            task.output.deleteDir()
        })
    }
}
